pragma solidity ^0.4.0;
contract ERC20_Bank_wallet
{
    event Approval(address owner, address spender,uint256 amount);
    event Transfer(address from, address to, uint256 amount);
    struct acc_details
    {
        uint256 balance;
    }
    mapping(address=>acc_details)acc;
    mapping(address=>mapping(address=>acc_details))spender_map;
    function totalSupply(uint256 amount) returns (uint256 balance)
    {
        acc[msg.sender].balance=amount;
    }
    function balanceOf(address acc_holder) returns (uint256 balance) 
    {
        return acc[acc_holder].balance;
    }
    function transfer(address transfer_to, uint256 amount) returns (bool) 
    {
        if(acc[msg.sender].balance>amount)
        {
            acc[transfer_to].balance+=amount;
            acc[msg.sender].balance-=amount;
            Transfer(msg.sender,transfer_to,amount);
            return true;
        }
        else
            return false;
    }
    function approve(address spender, uint256 amount) returns (bool)
    {
        if(acc[msg.sender].balance>amount)
        {
            spender_map[msg.sender][spender].balance=amount;
            Approval(msg.sender,spender,amount);
            return true;
        }
        else
            return false;
    }
    function transferFrom(address spender, address transfer_to, uint256 amount) returns (bool) 
    {
        if(spender_map[msg.sender][spender].balance>amount)
        {
            acc[transfer_to].balance+=amount;
            spender_map[msg.sender][spender].balance-=amount;
            acc[msg.sender].balance-=amount;
            Transfer(spender,transfer_to,amount);
            return true;
        }
        else
            return false;
    }
    function allowance(address spender) returns (uint256) 
    {
        return spender_map[msg.sender][spender].balance;
    }
}